name: 'publish'
on:
  workflow_dispatch:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            target: 'aarch64-apple-darwin' # Para Macs con chip M1 y superiores
          - platform: 'macos-latest'
            target: 'x86_64-apple-darwin' # Para Macs con Intel
          - platform: 'ubuntu-22.04'
            target: ''
          - platform: 'windows-latest'
            target: ''
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/* # Usa una versión LTS
          cache: 'pnpm' # Caching de dependencias de pnpm
      - name: Install pnpm and Add to PATH (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          npm install -g pnpm
          echo 'export PATH="$PATH:$(npm config get prefix)/bin"' >> ~/.bash_profile
          source ~/.bash_profile
          echo "PATH: $PATH" # Imprime el PATH para debug
          pnpm --version # Verifica la instalación de pnpm
      - name: Install pnpm (Otros sistemas operativos)
        if: matrix.platform != 'macos-latest'
        run: npm install -g pnpm
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - name: Install frontend dependencies
        run: pnpm install # pnpm debería estar disponible en este paso
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.target }} # Usa el target desde la matriz
